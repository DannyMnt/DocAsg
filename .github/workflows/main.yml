name: CD Workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Minikube
        uses: manusa/actions-setup-minikube@v2
        with:
          minikube-version: 'latest'
          kubernetes-version: 'v1.24.0'

      - name: Start Minikube
        run: minikube start --driver=none

      - name: Deploy Backend
        run: |
          kubectl apply -f kubernetes/postgres-pvc.yaml
          kubectl apply -f kubernetes/postgres-deployment.yaml
          kubectl apply -f kubernetes/backend-deployment.yaml

      - name: Deploy Frontend
        run: |
          kubectl apply -f kubernetes/frontend-deployment.yaml
          kubectl apply -f kubernetes/ingress.yaml

name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install
        working-directory: frontend

      - name: Run Frontend Tests
        run: npm test -- --watchAll=false
        working-directory: frontend

      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Run Backend Tests
        run: mvn test
        working-directory: backend

  build:
    name: Build and Publish Docker Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/via-tabloid-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/via-tabloid-frontend:latest

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/via-tabloid-backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/via-tabloid-backend:latest
